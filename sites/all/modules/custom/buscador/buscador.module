<?php

function buscador_init() {
  
  drupal_add_js(array('currentPath' => current_path()), 'setting');
  drupal_add_library('system', 'drupal.ajax');
  drupal_add_js(drupal_get_path('module', 'buscador').'/js/search.js', array('type' => 'file'));
  
}


function buscador_menu() {
  
  $items = array();
  
  $items['vivendo-search'] = array(
      'access arguments'  => array( 'access content' ),
      'delivery callback' => 'ajax_deliver',
      'page arguments'    => array(0),
      'page callback'     => 'buscardor_ajax',
      'title'             => t('Search link'),
      'type'              => MENU_CALLBACK
  );
  
  return $items;
  
}

/**
 * Implements hook_block_info().
 */
function buscador_block_info()
{
    $blocks = array();
    $blocks['buscador_mapa'] = array(
        'info' => t('Buscador - Mapa'),
    );
    $blocks['busca_formulario'] = array(
        'info' => t('Buscador - Formulario '),
        'cache' => DRUPAL_NO_CACHE,
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function buscador_block_view($delta = '')
{
    $block = array();
    switch ($delta) {
        case 'buscador_mapa':
            $block['subject'] = '';
            $block['content'] = buscador_mapa_content();
            break;
        case 'busca_formulario':
            $block['subject'] = '';
            $block['content'] = drupal_get_form('buscador_formulario_form');
            break;
    }
    return $block;
}

/**
 * Implements hook_form().
 */
function buscador_formulario_form($node, &$form_state)
{
    drupal_add_js("http://maps.googleapis.com/maps/api/js?key=AIzaSyCOwmUDwEzTInS9LVAO7ylCXddRZwfwmRU&sensor=false",'external');
    drupal_add_js(drupal_get_path('module', 'buscador').'/js/googlemaps.js');
    
    if( !isset($_SESSION) ) { session_start(); }

    global $base_url;

    $filterValueDefault = array(
        'ciudad'       => 0,
        'zona'         => 0,
        'tipo'         => 0,
        'constructora' => 0,
        'rango'        => 0
    );

    $filterValue = isset( $_SESSION['filterValue'] ) ? $_SESSION['filterValue'] : $filterValueDefault;
    $nId         = is_numeric( arg(1) ) ? arg(1) : null;
    $initLoad    = variable_get( 'initLoad' );
  
    $form['wrapper'] = array(
        '#prefix' => '<div id="buscador-wrapper">',
        '#suffix' => '</div>',
    );
    
    $form['wrapper']['cambiar_ciudad'] = array(
	'#markup' => '<div id="region-wrapper" class="wrapper"><a class="link-list-compare" href="'.$base_url.'?clear-global-filters=field_region">Cambiar regi√≥n</a></div>'
    );
    $form['wrapper']['filter_global_responsive'] = array(
        '#markup' => '<div id="block-block-18"><div class="filter-search">FILTRO DE BUSQUEDA</div></div>'
    );
    
    $value = global_filter_get_session_value('field_region');
    $filterCity = $value;
    
    $cities         = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('ciudades')->vid);
    $citiesSelected = array(0 => 'Todos');
    $cityDefault    = ($filterValue['ciudad'] > 0) ? $filterValue['ciudad'] : 0;
    
    foreach ( $cities as $city ){
      $cityDetail = taxonomy_term_load( $city->tid );
      if( $cityDetail->field_region['und'][0]['tid'] == $value[0] ){
        $citiesSelected[$city->tid] = $city->name; 
      }
    }
    
    $cityDefault = isset($form_state['values']['ciudad']) ? $form_state['values']['ciudad'] : $cityDefault;
    $filterValue['ciudad'] = $cityDefault;
    
    $form['wrapper']['ciudad'] = array(
      '#prefix' => '<div id="ciudad-wrapper" class="wrapper">',
      '#suffix' => '</div>',
      '#type' => 'select',
      '#options' => $citiesSelected,
      '#title' => 'Ciudad',
      '#default_value' => $cityDefault,
      '#ajax' => array(
          'event' => 'change',
          'callback' => 'reload_buscador',
          'wrapper' => 'buscador-wrapper',
      ),
    );
    
    $zones         = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('zonas')->vid);
    $zonesSelected = array(0 => 'Todos');
    $zoneDefault   = ($filterValue['zona'] > 0) ? $filterValue['zona'] : 0;
    
    foreach ( $zones as $zone ){
      $zoneDetail = taxonomy_term_load( $zone->tid );
      if( $zoneDetail->field_ciudad['und'][0]['tid'] == $cityDefault && $cityDefault > 0 ){
        if ( buscador_confirm_zone_has_project($zone->tid) ){
          $zonesSelected[$zone->tid] = $zone->name; 
        }
      } elseif( $cityDefault == 0 ) {
        if(array_key_exists($zoneDetail->field_ciudad['und'][0]['tid'], $citiesSelected)){
          if ( buscador_confirm_zone_has_project($zone->tid) ){
            $zonesSelected[$zone->tid] = $zone->name; 
          }
        }
      }
    }
    
    $zoneDefault = isset($form_state['values']['zona']) ? $form_state['values']['zona'] : $zoneDefault;
    if( !array_key_exists($zoneDefault, $zonesSelected) ) { $zoneDefault = 0; }
    $filterValue['zona'] = $zoneDefault;
    
    $form['wrapper']['zona'] = array(
        '#prefix' => '<div id="zona-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $zonesSelected,
        '#title' => 'Zona',
        '#default_value' => $zoneDefault,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    
    if(!isset($form_state['values']['zona']) ) { $form_state['values']['zona'] = $default; } 
    $voc = taxonomy_vocabulary_machine_name_load('tipo_de_proyecto');
    $tipos = taxonomy_get_tree($voc->vid);
    $tipos_select = array(0=>"Todos");
    $default = ($filterValue['tipo'] > 0 && !isset($form_state['values']['tipo'])) ? $filterValue['tipo'] : 0;
    foreach ($tipos as $tipo) {
        $key = $tipo->tid;
        $value = $tipo->name;
        $query = db_select('search_api_db_proyectos', 'p');
        $query->fields('p', array('nid'))
            ->condition('field_tipo', $tipo->tid, '=');
        if ( (isset($form_state['values']['zona']) && $form_state['values']['zona']>0)) {
            $filterValue['zona'] = $form_state['values']['zona'];
            $query->condition('field_zona', $form_state['values']['zona'], '=');
        } elseif (!isset($form_state['values']['zona']) && $filterValue['zona']>0 ) {
            $query->condition('field_zona', $filterValue['zona'], '=');
        } else {
            $filterValue['zona'] = 0;
        }
        if ( (isset($form_state['values']['constructora']) && $form_state['values']['constructora']>0))  {
            $filterValue['constructora'] = $form_state['values']['constructora'];
            $query->condition('field_constructora', $form_state['values']['constructora'], '=');
        } elseif(!isset($form_state['values']['constructora']) && $filterValue['constructora']>0 ) {
            $query->condition('field_constructora', $filterValue['constructora'], '=');
        } else {
            $filterValue['constructora'] = 0;
        }
        if ((isset($form_state['values']['rango']) && $form_state['values']['rango']>0)) {
            $filterValue['rango'] = $form_state['values']['rango'];
            $rango = taxonomy_term_load($form_state['values']['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_price', intval($data[0]) , '>=');
            $query->condition('field_price', intval($data[1]) , '<');
        } elseif (!isset($form_state['values']['rango']) &&  $filterValue['rango']>0 ) {
            $rango = taxonomy_term_load($filterValue['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_price', intval($data[0]) , '>=');
            $query->condition('field_price', intval($data[1]) , '<');
        } else {
            $filterValue['rango'] = 0;
        }
        $num_rows = $query->countQuery()->execute()->fetchField();
        if($num_rows>0)
            $tipos_select[$key] = $value /*. " (" . $num_rows . ")"*/;
    }

    $form['wrapper']['tipo'] = array(
        '#prefix' => '<div id="tipo-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $tipos_select,
        '#title' => 'Tipo',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    $constructoras = node_load_multiple(array(), array('type' => "constructora"));
    $constructoras_select = array(0=>"Todas");
    $default = ($filterValue['constructora'] > 0) ? $filterValue['constructora'] : 0;
    foreach ($constructoras as $constructora) {
        $key = $constructora->nid;
        $value = $constructora->title;
        $query = db_select('search_api_db_proyectos', 'p');
        $query->fields('p', array('nid'))
            ->condition('field_constructora', $constructora->nid, '=');
        if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0)) {
            $filterValue['zona'] = $form_state['values']['zona'];
            $query->condition('field_zona', $form_state['values']['zona'], '=');
        } elseif (!isset($form_state['values']['zona'])  && $filterValue['zona']>0) {
            $query->condition('field_zona', $filterValue['zona'], '=');
        } else {
            $query->condition('field_zona', array_keys($zonesSelected), 'IN');
            $filterValue['zona'] = 0;
        }        
        if ((isset($form_state['values']['tipo']) && $form_state['values']['tipo']>0)) {
            $filterValue['tipo'] = $form_state['values']['tipo'];
            $query->condition('field_tipo', $form_state['values']['tipo'], '=');
        } elseif (!isset($form_state['values']['tipo']) && $filterValue['tipo']>0) {
            $query->condition('field_tipo', $filterValue['tipo'], '=');
        } else {
            $filterValue['tipo'] = 0;
        }
        if ((isset($form_state['values']['rango']) && $form_state['values']['rango']>0)) {
            $filterValue['rango'] = $form_state['values']['rango'];
            $rango = taxonomy_term_load($form_state['values']['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_price', intval($data[0]) , '>=');
            $query->condition('field_price', intval($data[1]) , '<');
        } elseif (!isset($form_state['values']['rango']) && $filterValue['rango']>0) {
            $rango = taxonomy_term_load($filterValue['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_price', intval($data[0]) , '>=');
            $query->condition('field_price', intval($data[1]) , '<');
        } else {
            $filterValue['rango'] = 0;
        }
        $num_rows = $query->countQuery()->execute()->fetchField();
        if($num_rows>0){
          if ( !empty($constructora->field_ciudad) ){
            if ( array_key_exists($constructora->field_ciudad['und'][0]['tid'], $citiesSelected) ){
              $constructoras_select[$key] = $value /*. " (" . $num_rows . ")"*/;
            }
          }
          
        }
        
    }

    $form['wrapper']['constructora'] = array(
        '#prefix' => '<div id="constructora-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $constructoras_select,
        '#title' => 'Constructora',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    $voc = taxonomy_vocabulary_machine_name_load('rango_de_precios');
    $rangos = taxonomy_get_tree($voc->vid);
    $rangos_select = array(0 => "Todos");
    $default = ($filterValue['rango'] > 0) ? $filterValue['rango'] : 0;
    foreach ($rangos as $rango) {
        $key = $rango->tid;
        $value = $rango->name;
        $data = explode("|",$rango->description);
        $query = db_select('search_api_db_proyectos', 'p');
        $query->fields('p', array('nid'))
            ->condition('field_price', intval($data[0]), '>=')
            ->condition('field_price', intval($data[1]), '<');
        if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0)) {
          $filterValue['zona'] = $form_state['values']['zona'];
          $query->condition('field_zona', $form_state['values']['zona'], '=');
        } elseif (!isset($form_state['values']['zona'])  &&  $filterValue['zona'] > 0) {
          $query->condition('field_zona', $filterValue['zona'], '=');
        } else {
          $filterValue['zona'] = 0;
        }
        if ( (isset($form_state['values']['constructora']) && $form_state['values']['constructora']>0))  {
          $filterValue['constructora'] = $form_state['values']['constructora'];
          $query->condition('field_constructora', $form_state['values']['constructora'], '=');
        } elseif (isset($form_state['values']['constructora'])  &&  $filterValue['constructora']>0 ) {
          $query->condition('field_constructora', $filterValue['constructora'], '=');
        } else {
          $filterValue['constructora'] = 0;
        }
        if ((isset($form_state['values']['tipo']) && $form_state['values']['tipo']>0)) {
          $filterValue['tipo'] = $form_state['values']['tipo'];
          $query->condition('field_tipo', $form_state['values']['tipo'], '=');
        } elseif(!isset($form_state['values']['tipo']) && $filterValue['tipo']) {
          $query->condition('field_tipo', $filterValue['tipo'], '=');
        } else {
          $filterValue['tipo'] = 0;
        }
        $num_rows = $query->countQuery()->execute()->fetchField();
        if($num_rows>0)
            $rangos_select[$key] = $value /*. " (" . $num_rows . ")"*/;
    }
    $form['wrapper']['rango'] = array(
        '#prefix' => '<div id="rango-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $rangos_select,
        '#title' => 'Precio',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    $query = db_select('search_api_db_proyectos', 'p');
    $query->fields('p', array('nid'));
    if ( (isset($form_state['values']['ciudad']) && $form_state['values']['ciudad']>0)) {
      $filterValue['ciudad'] = isset($form_state['values']['ciudad']) ? $form_state['values']['ciudad'] : $filterValue['ciudad'];
      $query->condition('field_ciudad', $form_state['values']['ciudad'], '=');
    } elseif ( !isset($form_state['values']['ciudad']) || $form_state['values']['ciudad'] == 0 ) {
      if ( $filterValue['ciudad'] > 0 ) {
        $query->condition('field_ciudad', $filterValue['ciudad'], '=');    
      } else {
        $query->condition('field_ciudad', array_keys($citiesSelected), 'IN');    
      }
    }
    if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0)) {
      $filterValue['zona'] = isset($form_state['values']['zona']) ? $form_state['values']['zona'] : $filterValue['zona'];
      $query->condition('field_zona', $form_state['values']['zona'], '=');
    } elseif ( !isset($form_state['values']['zona']) || $form_state['values']['zona'] == 0 ) {
      if ( $filterValue['zona'] > 0 ) {
        $query->condition('field_zona', $filterValue['zona'], '=');    
      } else {
        $query->condition('field_zona', array_keys($zonesSelected), 'IN');    
      }
    } 
    if ((isset($form_state['values']['rango']) && $form_state['values']['rango']>0)) {
      $filterValue['rango'] = isset($form_state['values']['rango']) ? $form_state['values']['rango'] : $filterValue['rango'];
      $rango = taxonomy_term_load($form_state['values']['rango']);
      $data = explode("|",$rango->description);
      $query->condition('field_price', intval($data[0]) , '>=');
      $query->condition('field_price', intval($data[1]) , '<');
    } elseif (!isset($form_state['values']['rango']) &&  $filterValue['rango']>0 ) {
      $rango = taxonomy_term_load($filterValue['rango']);
      $data = explode("|",$rango->description);
      $query->condition('field_price', intval($data[0]) , '>=');
      $query->condition('field_price', intval($data[1]) , '<');
    } else {
      $filterValue['rango'] = 0;
    }
    if ( (isset($form_state['values']['constructora']) && $form_state['values']['constructora']>0))  {
      $filterValue['constructora'] = isset($form_state['values']['constructora']) 
          ? $form_state['values']['constructora'] : $filterValue['constructora'];
      $query->condition('field_constructora', $form_state['values']['constructora'], '=');
    } elseif(!isset($form_state['values']['constructora']) &&  $filterValue['constructora']>0 ){
      $query->condition('field_constructora', $filterValue['constructora'], '=');
    } else {
      $filterValue['constructora'] = 0;
    }
    
    if ((isset($form_state['values']['tipo']) && $form_state['values']['tipo']>0)) {
        $filterValue['tipo'] = isset($form_state['values']['tipo']) ? $form_state['values']['tipo'] : $filterValue['tipo'];
        $query->condition('field_tipo', $form_state['values']['tipo'], '=');
    } elseif (!isset($form_state['values']['tipo']) &&  $filterValue['tipo']> 0 ) {
        $query->condition('field_tipo', $filterValue['tipo'], '=');
    } else {
        $filterValue['tipo'] = 0;
    }

    $_SESSION['filterValue'] = $filterValue;

    
    if ( $nId ) {
      if ( node_load( $nId )->type == 'proyecto' ) {
    	$query->condition( 'nid', $nId, '=' );
    	if ( $initLoad !== $nId ) {
    	  variable_set( 'initLoad', $nId );
    	} 
      }
    }
    
    
    $form['wrapper']['text'] = array(
        '#attributes' => array( 'autocomplete' => 'off' ),
        '#prefix' => '<div id="text-wrapper" class="wrapper" data-url="vivendo-search">',
        '#suffix' => '</div>',
        '#type' => 'textfield',
        '#title' => 'Buscar por palabra',
        '#size' => 29
    );
    
        
    $proyectos_ids = $query->execute()->fetchAllAssoc("nid");
    $proyectos = entity_load("node",array_keys($proyectos_ids));
    
    $button = '<div class="up-down"><a class="b-up" href="#">click</a></div>';
    
    $form['maps']['googlemaps'] = array(
        '#type' => 'markup',
        '#prefix' => '<div id="mapa">',
        '#suffix' => '</div>' . $button,
        '#markup' => ''
    );
    
    $form['wrapper']['data'] = array(
        '#type' => 'markup',
        '#markup' => ''
    );
    
    $_SESSION['proyectos']  = $proyectos;

    $points = "[";
    $arrayJs = '';
    foreach($proyectos as $proyecto){
        if(isset($proyecto->field_coordenadas['und'][0]['value']) && $proyecto->field_coordenadas['und'][0]['value'] != "" && strstr($proyecto->field_coordenadas['und'][0]['value'],",")){
          if(isset($proyecto->field_price['und'][0]['value']) && $proyecto->field_price['und'][0]['value'] != ""){
              $precio = number_format($proyecto->field_price['und'][0]['value'], 0, ',', '.');
          } else {
              $precio = 'No disponible';
          }
          if(isset($proyecto->field_direccion['und'][0]['value']) && $proyecto->field_direccion['und'][0]['value'] != ""){
              $direccion = (string)substr($proyecto->field_direccion['und'][0]['value'], 0, 24);
          } else {
              $direccion = 0;
          }
          $image_style = "escalar_289x66-copy-1";
          $image_path = !empty($proyecto->field_fotos) ? $proyecto->field_fotos['und'][0]['uri'] : '';
          $image = image_style_url($image_style, $image_path);
          $url = drupal_get_path_alias( 'node/' . $proyecto->nid );
          $points .= '{name: "' .htmlentities($proyecto->title, ENT_QUOTES, "UTF-8") . '", latlng: new google.maps.LatLng(' . $proyecto->field_coordenadas['und'][0]['value'] . '), address: "' . htmlentities($direccion, ENT_QUOTES, "UTF-8"). '", price: "' . $precio . '", images_url: "' . $image . '", url: "' . $url . '"},';
          //$points .= '{name: "' .$proyecto->title . '", latlng: new google.maps.LatLng(' . $proyecto->field_coordenadas['und'][0]['value'] . '), price: "' . $precio . '", images_url: "' . $image . '", url: "' . $url . '"},';
          $arrayJs .= $points;
        }
    }
    $points .= "]";
    
    $form['wrapper']['data']['#markup'] .= '<script> var points = ' . $points . ';</script>';

    return $form;
}

function reload_buscador($form, $form_state){
    $form['wrapper']['data']['#markup'] .= "<script>update();</script>";
    return $form['wrapper'];
}


function buscador_field_attach_view_alter( &$output, $context ) {
    
    if ( isset($output['field_fotos']) ) {
        
      $node = node_load( arg(1) );
      
        if ( $output['field_fotos']['#object']->nid == arg(1) && !empty($node->field_video) ) {
            $output['field_fotos']['#items'][] = $output['field_fotos']['#items'][ count($output['field_fotos']['#items']) - 1 ];
        }
        
    }
    
}

function _get_result_search( $data ) {
  
  $region = global_filter_get_session_value('field_region');

  $search = db_select( 'node', 'noPC' )
      ->fields( 'noPC', array('nid') )
      ->condition('noPC.status', '1', '=')
      ->condition( 'noPC.type', array('proyecto', 'constructora'), 'IN' )
      ->range(0, 15);

  $search->leftJoin( 'field_data_field_region', 'region', 'region.entity_id = noPC.nid' );
  $search->condition( 'region.field_region_tid', $region, '=' );

  $search->leftJoin( 'field_data_field_codigo', 'code', 'code.entity_id = noPC.nid' );
  
  $or = db_or();

  $or->condition( 'noPC.title', $data . '%', 'LIKE' );
  $or->condition( 'code.field_codigo_value', $data . '%' , 'LIKE' );

  $search->condition( $or );

  $resultSearch = $search->execute()->fetchAll();

  for ( $i=0; $i<count($resultSearch); $i++ ) {
    $dataIds[] = $resultSearch[$i]->nid;
  }

  return $dataIds;
  
}


function buscardor_ajax() {
  
  $data     = isset($_REQUEST['data']) ? $_REQUEST['data'] : '';
  $commands = array();
  $output   = '';
  
  $resultSearch = node_load_multiple( _get_result_search($data) );
  $keys         = array_keys( $resultSearch );
  
  $output .= '<div class="result-search">';
  $output .=   '<ul class="items-result">';
  
  for ( $i=0; $i<count($resultSearch); $i++ ):
  $output .=     '<li class="item">';  
  $output .=       '<a class="link" href="'.url('node/'.$resultSearch[ $keys[$i] ]->nid).'">';  
  $output .=         theme_image_style( array(
      'style_name' => 'escalar_289x66-copy',
      'path'       => $resultSearch[ $keys[$i] ]->type == 'proyeto' ? 
          $resultSearch[ $keys[$i] ]->field_fotos['und'][0]['uri'] : $resultSearch[ $keys[$i] ]->field_image['und'][0]['uri']
  ));
  $output .=         '<span class="content">' . $resultSearch[ $keys[$i] ]->title . '</span><br/>';
  $output .=         '<span class="type">' . $resultSearch[ $keys[$i] ]->type . '</span>';
  $output .=       '</a>';
  $output .=     '</li>';
  endfor;
  
  $output .=   '</ul>';
  $output .= '<div>';
  
  $commands[] = ajax_command_remove( '.result-search' );
  $commands[] = ajax_command_append( '#text-wrapper', $output );
  $commands[] = array('command' => 'vivendo_search_result');
  
  return array('#type' => 'ajax', '#commands' => $commands);
  
}

function buscador_confirm_zone_has_project( $key ){
  
  $query = db_select('node', 'pro')
    ->fields( 'pro', array('nid') )
    ->condition( 'pro.type', 'proyecto', '=' )
    ->condition( 'pro.status', '1', '=' );

  $query->leftJoin( 'field_data_field_zona', 'fz', 'fz.entity_id = pro.nid' );
  $query->condition( 'fz.field_zona_tid', $key, '=' );

  $count = $query->execute()->rowCount();
  
  if ( $count > 0 ) {
    return 1;
  } else {
    return 0;
  }
  
}

function buscador_form_alter(&$form, &$form_state, $form_id){
  
  if ( $form_id == 'constructora_node_form' || $form_id == 'proyecto_node_form'){
    
    if ( !isset($_SESSION) ) { session_start(); }
    
    $parentsZone = taxonomy_get_tree( '3' );
    $regions['_none'] = t('- Ninguno -');

    foreach( $parentsZone as $parent ) {

      if( $parent->parents[0] == '0' ){
        $regions[ $parent->tid ] = $parent->name;
      }

    }
    
    $form['field_regiones']['und']['#options'] = $regions;
    
    $_SESSION['form_construct']= $form;
    $_SESSION['regions']= $regions;
    
    
  }
  
}


/*function buscador_confirm_zone_has_constructor( $key ){
  
  $query = db_select( 'node', 'cons' )
      ->fields('cons', array('nid'))
      ->condition('cons.type', 'constructora')
      ->condition('cons.status', '1');
  
  $query->leftJoin( 'field_data_field_ciudad', 'fz', 'fz.entity_id = cons.nid' );
  $query->condition( 'fz.field_ciudad_tid', $key, '=' );
  
  $count = $query->execute()->rowCount();
  
  if ( $count > 0 ) {
    return 1;
  } else {
    return 0;
  }
  
}*/