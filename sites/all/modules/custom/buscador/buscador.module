<?php

/**
 * Implements hook_block_info().
 */
function buscador_block_info()
{
    $blocks = array();
    $blocks['buscador_mapa'] = array(
        'info' => t('Buscador - Mapa'),
    );
    $blocks['busca_formulario'] = array(
        'info' => t('Buscador - Formulario '),
        'cache' => DRUPAL_NO_CACHE,
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function buscador_block_view($delta = '')
{
    $block = array();
    switch ($delta) {
        case 'buscador_mapa':
            $block['subject'] = '';
            $block['content'] = buscador_mapa_content();
            break;
        case 'busca_formulario':
            $block['subject'] = '';
            $block['content'] = drupal_get_form('buscador_formulario_form');
            break;
    }
    return $block;
}

/**
 * Implements hook_form().
 */
function buscador_formulario_form($node, &$form_state)
{
    drupal_add_js("http://maps.googleapis.com/maps/api/js?key=AIzaSyCiuczAs8cb-ThpKYue6hpFsaYHGCTORAI&sensor=false",'external');
    drupal_add_js(drupal_get_path('module', 'buscador').'/js/googlemaps.js');

    if( !isset($_SESSION) ) { session_start(); }

    global $base_url;

    $filterValue = array(
        'zona'         => 0,
        'tipo'         => 0,
        'constructora' => 0,
        'rango'        => ''
    );

    $filterValue = isset( $_SESSION['filterValue'] ) ? $_SESSION['filterValue'] : $filterValue;

    $nId      = is_numeric( arg(1) ) ? arg(1) : null;
    $initLoad = variable_get( 'initLoad' );
  
    $form['wrapper'] = array(
        '#prefix' => '<div id="buscador-wrapper">',
        '#suffix' => '</div>',
    );
    $value = global_filter_get_session_value('field_ciudad');
    if (is_array($value) && isset($value[0]) && $value[0] == 2) {
        $ciudad = "Cali";
    } else {
        $ciudad = "BogotÃ¡";
    }
    $ciudad_id = false;
    $voc = taxonomy_vocabulary_machine_name_load('zonas');
    $zonas = taxonomy_get_tree($voc->vid);
    $zonas_select = array();
    $default = isset($filterValue['zona']) ? $filterValue['zona'] : 0;;
    foreach ($zonas as $zona) {
        if ($zona->name == $ciudad) $ciudad_id = $zona->tid;
        if (!$ciudad_id) continue;
        if (!isset($zona->parents) || !is_array($zona->parents) || !in_array($ciudad_id, $zona->parents)) continue;
        if ($default == 0) $default = $zona->tid;
        $key = $zona->tid;
        $value = $zona->name;
        $zonas_select[$key] = $value;
    }
    $form['wrapper']['zona'] = array(
        '#prefix' => '<div id="zona-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $zonas_select,
        '#title' => 'Zona',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    if(!isset($form_state['values']['zona']) && (!isset($filterValue['zona']))) {
        $form_state['values']['zona'] = $default;   
    } elseif ( isset($filterValue['zona']) ) {
        $form_state['values']['zona'] = $filterValue['zona'];
    }
    $voc = taxonomy_vocabulary_machine_name_load('tipo_de_proyecto');
    $tipos = taxonomy_get_tree($voc->vid);
    $tipos_select = array(0=>"Todos");
    $default = isset($filterValue['tipo']) ? $filterValue['tipo'] : 0;
    foreach ($tipos as $tipo) {
        $key = $tipo->tid;
        $value = $tipo->name;
        $query = db_select('search_api_db_proyectos', 'p');
        $query->fields('p', array('nid'))
            ->condition('field_tipo', $tipo->tid, '=');
        if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0) || $filterValue['zona']>0 ) {
            $filterValue['zona'] = isset($form_state['values']['zona']) ? $form_state['values']['zona'] : $filterValue['zona'];
            $query->condition('field_zona', $filterValue['zona'], '=');
        }
        if ( (isset($form_state['values']['constructora']) && $form_state['values']['constructora']>0) || $filterValue['constructora']>0)  {
            $filterValue['constructora'] = isset($form_state['values']['constructora']) 
                ? $form_state['values']['constructora'] : $filterValue['constructora'];
            $query->condition('field_constructora', $filterValue['constructora'], '=');
        }
        if ((isset($form_state['values']['rango']) && $form_state['values']['rango']>0) || $filterValue['rango']!=='') {
            $filterValue['rango'] = isset($form_state['values']['rango']) ? $form_state['values']['rango'] : $filterValue['rango'];
            $rango = taxonomy_term_load($filterValue['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_precio', intval($data[0]) , '>=');
            $query->condition('field_precio', intval($data[1]) , '<');
        }
        $num_rows = $query->countQuery()->execute()->fetchField();
        if($num_rows>0)
            $tipos_select[$key] = $value . " (" . $num_rows . ")";;
    }

    $form['wrapper']['tipo'] = array(
        '#prefix' => '<div id="tipo-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $tipos_select,
        '#title' => 'Tipo',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    $constructoras = node_load_multiple(array(), array('type' => "constructora"));
    $constructoras_select = array(0=>"Todas");
    $default = isset($filterValue['constructora']) ? $filterValue['constructora'] : 0;
    foreach ($constructoras as $constructora) {
        $key = $constructora->nid;
        $value = $constructora->title;
        $query = db_select('search_api_db_proyectos', 'p');
        $query->fields('p', array('nid'))
            ->condition('field_constructora', $constructora->nid, '=');
        if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0) || $filterValue['zona']>0 ) {
            $filterValue['zona'] = isset($form_state['values']['zona']) ? $form_state['values']['zona'] : $filterValue['zona'];
            $query->condition('field_zona', $filterValue['zona'], '=');
        }
        if ((isset($form_state['values']['tipo']) && $form_state['values']['tipo']>0) || $filterValue['tipo']>0) {
            $filterValue['tipo'] = isset($form_state['values']['tipo']) ? $form_state['values']['tipo'] : $filterValue['tipo'];
            $query->condition('field_tipo', $filterValue['tipo'], '=');
        }
        if ((isset($form_state['values']['rango']) && $form_state['values']['rango']>0) || $filterValue['rango']!=='') {
            $filterValue['rango'] = isset($form_state['values']['rango']) ? $form_state['values']['rango'] : $filterValue['rango'];
            $rango = taxonomy_term_load($filterValue['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_precio', intval($data[0]) , '>=');
            $query->condition('field_precio', intval($data[1]) , '<');
        }
        $num_rows = $query->countQuery()->execute()->fetchField();
        if($num_rows>0)
            $constructoras_select[$key] = $value . " (" . $num_rows . ")";;
    }

    $form['wrapper']['constructora'] = array(
        '#prefix' => '<div id="constructora-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $constructoras_select,
        '#title' => 'Constructora',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    $voc = taxonomy_vocabulary_machine_name_load('rango_de_precios');
    $rangos = taxonomy_get_tree($voc->vid);
    $rangos_select = array(0 => "Todos");
    $default = !isset($filterValue['rango']) ? $filterValue['rango'] : '';
    foreach ($rangos as $rango) {
        $key = $rango->tid;
        $value = $rango->name;
        $data = explode("|",$rango->description);
        $query = db_select('search_api_db_proyectos', 'p');
        $query->fields('p', array('nid'))
            ->condition('field_precio', intval($data[0]), '>=')
            ->condition('field_precio', intval($data[1]), '<');
        if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0) || $filterValue['zona']>0 ) {
            $filterValue['zona'] = isset($form_state['values']['zona']) ? $form_state['values']['zona'] : $filterValue['zona'];
            $query->condition('field_zona', $filterValue['zona'], '=');
        }
        if ( (isset($form_state['values']['constructora']) && $form_state['values']['constructora']>0) || $filterValue['constructora']>0)  {
            $filterValue['constructora'] = isset($form_state['values']['constructora']) 
                ? $form_state['values']['constructora'] : $filterValue['constructora'];
            $query->condition('field_constructora', $filterValue['constructora'], '=');
        }
        if ((isset($form_state['values']['tipo']) && $form_state['values']['tipo']>0) || $filterValue['tipo']>0) {
            $filterValue['tipo'] = isset($form_state['values']['tipo']) ? $form_state['values']['tipo'] : $filterValue['tipo'];
            $query->condition('field_tipo', $filterValue['tipo'], '=');
        }
        $num_rows = $query->countQuery()->execute()->fetchField();
        if($num_rows>0)
            $rangos_select[$key] = $value . " (" . $num_rows . ")";;
    }
    $form['wrapper']['rango'] = array(
        '#prefix' => '<div id="rango-wrapper" class="wrapper">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#options' => $rangos_select,
        '#title' => 'Precio',
        '#default_value' => $default,
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'reload_buscador',
            'wrapper' => 'buscador-wrapper',
        ),
    );
    $query = db_select('search_api_db_proyectos', 'p');
    $query->fields('p', array('nid'));
    if ( (isset($form_state['values']['zona'])  && $form_state['values']['zona']>0) || $filterValue['zona']>0 ) {
            $filterValue['zona'] = isset($form_state['values']['zona']) ? $form_state['values']['zona'] : $filterValue['zona'];
            $query->condition('field_zona', $filterValue['zona'], '=');
        }
    if ((isset($form_state['values']['rango']) && $form_state['values']['rango']>0) || $filterValue['rango']!=='') {
            $filterValue['rango'] = isset($form_state['values']['rango']) ? $form_state['values']['rango'] : $filterValue['rango'];
            $rango = taxonomy_term_load($filterValue['rango']);
            $data = explode("|",$rango->description);
            $query->condition('field_precio', intval($data[0]) , '>=');
            $query->condition('field_precio', intval($data[1]) , '<');
        }
    if ( (isset($form_state['values']['constructora']) && $form_state['values']['constructora']>0) || $filterValue['constructora']>0)  {
            $filterValue['constructora'] = isset($form_state['values']['constructora']) 
                ? $form_state['values']['constructora'] : $filterValue['constructora'];
            $query->condition('field_constructora', $filterValue['constructora'], '=');
    }
    if ((isset($form_state['values']['tipo']) && $form_state['values']['tipo']>0) || $filterValue['tipo']>0) {
        $filterValue['tipo'] = isset($form_state['values']['tipo']) ? $form_state['values']['tipo'] : $filterValue['tipo'];
        $query->condition('field_tipo', $filterValue['tipo'], '=');
    }

    $_SESSION['filterValue'] = $filterValue;

    
    if ( $nId ) {
      if ( node_load( $nId )->type == 'proyecto' ) {
    	$query->condition( 'nid', $nId, '=' );
    	if ( $initLoad !== $nId ) {
    	  variable_set( 'initLoad', $nId );
    	} 
      }
    }
    
    
    $form['wrapper']['cambiar_ciudad'] = array(
	'#markup' => '<a class="link-list-compare" href="'.$base_url.'?clear-global-filters=field_ciudad">Cambiar Ciudad</a>'
    );
        
    $proyectos_ids = $query->execute()->fetchAllAssoc("nid");
    $proyectos = entity_load("node",array_keys($proyectos_ids));
    
    $button = '<div class="up-down"><a class="b-up" href="#">click</a></div>';
    
    $form['maps']['googlemaps'] = array(
        '#type' => 'markup',
        '#prefix' => '<div id="mapa">',
        '#suffix' => '</div>' . $button,
        '#markup' => ''
    );
    
    $form['wrapper']['data'] = array(
        '#type' => 'markup',
        '#markup' => ''
    );
    
    $points = "[";
    foreach($proyectos as $proyecto){
        if(isset($proyecto->field_coordenadas['und'][0]['value']) && $proyecto->field_coordenadas['und'][0]['value'] != "" && strstr($proyecto->field_coordenadas['und'][0]['value'],",")){
            if(isset($proyecto->field_precio['und'][0]['value']) && $proyecto->field_precio['und'][0]['value'] != ""){
                $precio = number_format($proyecto->field_precio['und'][0]['value'], 0, ',', '.');
            } else {
                $precio = 0;
            }
            if(isset($proyecto->field_direccion['und'][0]['value']) && $proyecto->field_direccion['und'][0]['value'] != ""){
                $direccion = substr($proyecto->field_direccion['und'][0]['value'], 0, 24);
            } else {
                $direccion = 0;
            }
            $image_style = "escalar_289x66-copy";
            $image_path = !empty($proyecto->field_image) ? $proyecto->field_image['und'][0]['uri'] : '';
            $image = image_style_url($image_style, $image_path);
	    $url = drupal_get_path_alias( 'node/' . $proyecto->nid );
            $points .= '{name: "' .$proyecto->title . '", latlng: new google.maps.LatLng(' . $proyecto->field_coordenadas['und'][0]['value'] . '), address: "' . $direccion. '", price: "' . $precio . '", images_url: "' . $image . '", url: "' . $url . '"},';
        }
    }
    $points .= "]";
    
    $form['wrapper']['data']['#markup'] .= '<script> var points = ' . $points . ';</script>';

    return $form;
}

function reload_buscador($form, $form_state){
    $form['wrapper']['data']['#markup'] .= "<script>update();</script>";
    return $form['wrapper'];
}
